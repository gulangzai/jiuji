<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://java.sun.com/xml/ns/javaee" 
xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
 
 <context-param>
     <description>啾唧网</description>
     <param-name>webAppRootKey</param-name>
     <param-value>www.jiujichina.com.jiuji</param-value> 
  </context-param>
   
  <!-- spring和mybatis的配置文件 -->
  
  
  <context-param>
     <param-name>contextConfigLocation</param-name>
     <param-value>classpath:configure/spring/spring.xml</param-value> 
  </context-param>  
   
 <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:configure/log/log4j.properties</param-value>
  </context-param>
  
  <!-- 该过滤器用于实现单点登出功能 -->
  <filter>
     <filter-name>CAS Single Sign Out Filter</filter-name>
     <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
  </filter>
 <!--  <filter-mapping>
      <filter-name>CAS Single Sign Out Filter</filter-name>
      <url-pattern>/*</url-pattern>
  </filter-mapping> -->
  
  <!-- 该过滤器负责用户的认证工作，必须启用它 -->
  <filter>
     <filter-name>CASFilter</filter-name>
     <filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
     <init-param>
        <param-name>casServerLoginUrl</param-name>
        <param-value>http://www.jiujichina.com:8080/cas/login</param-value>
     </init-param>
     <init-param>
       <param-name>serverName</param-name>
       <param-value>http://localhost:8080</param-value>
     </init-param>
  </filter>
 <!--  <filter-mapping>
     <filter-name>CASFilter</filter-name>
     <url-pattern>/*</url-pattern>
  </filter-mapping> -->
  
  <!--
 该过滤器负责对Ticket的校验工作，必须启用它 -->

<filter> 
	<filter-name>CAS Validation Filter</filter-name> 
	<filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
	<init-param>
	<param-name>casServerUrlPrefix</param-name> 
	<param-value>http://www.jiujichina.com:8080/cas</param-value> 
	</init-param> 
	<init-param> 
	<param-name>serverName</param-name> 
	<param-value>http://localhost:8080</param-value> 
	</init-param> 
</filter>
<!-- <filter-mapping>
	<filter-name>CAS Validation Filter</filter-name> 
	<url-pattern>/*</url-pattern> 
</filter-mapping> -->

<!-- 
该过滤器负责实现HttpServletRequest请求的包裹， 
比如允许开发者通过HttpServletRequest的getRemoteUser()方法获得SSO登录用户的登录名，可选配置。 
-->

<filter> 
<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name> 
<filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
</filter>

<!-- <filter-mapping> 
<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name> 
<url-pattern>/*</url-pattern> 
</filter-mapping> -->

<!-- 
该过滤器使得开发者可以通过org.jasig.cas.client.util.AssertionHolder来获取用户的登录名。 
比如AssertionHolder.getAssertion().getPrincipal().getName()。 
-->

<filter> 
<filter-name>CAS Assertion Thread Local Filter</filter-name>
<filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
</filter>

<!-- <filter-mapping>
<filter-name>CAS Assertion Thread Local Filter</filter-name> 
<url-pattern>/*</url-pattern> 
</filter-mapping> -->



 <filter>
    <filter-name>shiroFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    <init-param>
    <!-- 该省缺值为false，表示生命周期由springapplicationContext管理，设置为true则表示由servletcontainer管理 -->
       <param-name>targetFilterLifecycle</param-name>
       <param-value>true</param-value>
    </init-param>
 </filter>
 <filter-mapping>
    <filter-name>shiroFilter</filter-name>
    <url-pattern>/*</url-pattern>
 </filter-mapping>
  <!-- 编码过滤器 --> 
  <filter>
     <filter-name>encodingFilter</filter-name>
     <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class> 
     <init-param>
         <param-name>encoding</param-name>
         <param-value>UTF-8</param-value>
     </init-param>
     <init-param>
       <param-name>forceEncoding</param-name>
       <param-value>true</param-value>
     </init-param>
  </filter>
  
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
    <filter>
      <filter-name>openSessionInViewFilter</filter-name>
      <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
        <init-param>
            <param-name>sessionFactoryBeanName</param-name>
            <param-value>sessionFactory</param-value>
        </init-param>
        <init-param>
            <param-name>singleSession</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>flushMode</param-name>
            <param-value>AUTO</param-value>
        </init-param> 
  </filter>
   <filter-mapping>
    <filter-name>openSessionInViewFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping> 
  
  <!-- 单点退出，用于实现单点登出功能 -->
  <listener>
     <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
  </listener>
  
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>  
  
  <!-- Spring监听器 -->
  <listener>
      <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class> 
  </listener>
  
  <!-- 防止Spring内存溢出监听器 -->  
  <listener>
      <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  
  <servlet>
        <servlet-name>login</servlet-name>
        <servlet-class>com.qq.connect.demo.IndexServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>login</servlet-name>
        <!-- 业界标准 用.do后缀来表示 controler -->
        <url-pattern>/qqLogin.do</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>afterlogin</servlet-name>
        <servlet-class>com.qq.connect.demo.AfterLoginRedirectServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>afterlogin</servlet-name>
        <!-- 业界标准 用.do后缀来表示 controler -->
        <url-pattern>/afterlogin.do</url-pattern>
    </servlet-mapping>


    <servlet>
        <servlet-name>shuoshuo</servlet-name>
        <servlet-class>com.qq.connect.demo.ShuoShuoServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>shuoshuo</servlet-name>
        <url-pattern>/shuoshuo.do</url-pattern>
    </servlet-mapping>
  
  
  
  <!-- Spring MVC servlet  -->
  <servlet>
      <servlet-name>spring</servlet-name>
      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
      <init-param>
          <param-name>contentConfigLocation</param-name>
          <param-value>classpath:configure/spring/spring-servlet.xml</param-value>
      </init-param>  
       <!-- 配置随服务器启动自动初始化 -->
       <load-on-startup>1</load-on-startup>
  </servlet>
  
  
  <servlet-mapping>
     <servlet-name>spring</servlet-name>
     <url-pattern>*.do</url-pattern>
  </servlet-mapping>
  
  
  <servlet> 
	    <servlet-name>ConnectorServlet</servlet-name> 
	    <servlet-class>com.ckfinder.connector.ConnectorServlet</servlet-class>
	      <init-param>
		        <param-name>configuration</param-name>
		        <param-value>com.lanbao.ckFinder.CKFinderConfiguration</param-value>
		  </init-param> 
	    <init-param> 
	        <param-name>XMLConfig</param-name> 
	        <param-value>/WEB-INF/ckfinder.xml</param-value> 
	    </init-param> 
	    <init-param> 
	        <param-name>debug</param-name> 
	        <param-value>false</param-value> 
	    </init-param> 
	    <load-on-startup>1</load-on-startup> 
	</servlet> 
	<servlet-mapping>
	    <servlet-name>ConnectorServlet</servlet-name> 
	    <url-pattern>/ckfinder2.6.2/core/connector/java/connector.java</url-pattern> 
	</servlet-mapping>
	
	
  
  <welcome-file-list>
     <welcome-file>/index.jsp</welcome-file>
  </welcome-file-list>
  
   <error-page>
    <error-code>404</error-code>
    <location>/WEB-INF/jsp/lanbao/errorpage/404.jsp</location>
  </error-page>
  <error-page>
    <error-code>405</error-code>
    <location>/WEB-INF/jsp/lanbao/errorpage/405.jsp</location>
  </error-page>
  <error-page>
    <error-code>500</error-code>
    <location>/WEB-INF/jsp/lanbao/errorpage/500.jsp</location>
  </error-page>
  
  <session-config>
    <session-timeout>60</session-timeout>
  </session-config>
  
</web-app>
